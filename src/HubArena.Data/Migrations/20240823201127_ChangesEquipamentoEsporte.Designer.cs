// <auto-generated />
using System;
using HubArena.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HubArena.Data.Migrations
{
    [DbContext(typeof(HubArenaDbContext))]
    [Migration("20240823201127_ChangesEquipamentoEsporte")]
    partial class ChangesEquipamentoEsporte
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HubArena.Business.Models.ContatoModel", b =>
                {
                    b.Property<int>("IdContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContato"));

                    b.Property<int>("Ddd")
                        .HasColumnType("int");

                    b.Property<int>("Ddi")
                        .HasColumnType("int");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoContato")
                        .HasColumnType("int");

                    b.HasKey("IdContato");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("TB_CONTATO", (string)null);
                });

            modelBuilder.Entity("HubArena.Business.Models.EnderecoFuncionarioModel", b =>
                {
                    b.Property<int>("IdEnderecoFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnderecoFuncionario"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("PontoReferencia")
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEnderecoFuncionario");

                    b.HasIndex("IdFuncionario")
                        .IsUnique();

                    b.ToTable("TB_ENDERECO_FUNCIONARIO", (string)null);
                });

            modelBuilder.Entity("HubArena.Business.Models.EnderecoQuadraModel", b =>
                {
                    b.Property<int>("IdEnderecoQuadra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnderecoQuadra"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<int>("IdQuadra")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("PontoReferencia")
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEnderecoQuadra");

                    b.HasIndex("IdQuadra")
                        .IsUnique();

                    b.ToTable("TB_ENDERECO_QUADRA", (string)null);
                });

            modelBuilder.Entity("HubArena.Business.Models.EquipamentoModel", b =>
                {
                    b.Property<int>("IdEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEquipamento"));

                    b.Property<int>("IdEsporte")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("StatusEquipamento")
                        .HasColumnType("int");

                    b.HasKey("IdEquipamento");

                    b.HasIndex("IdEsporte");

                    b.ToTable("TB_EQUIPAMENTO", (string)null);
                });

            modelBuilder.Entity("HubArena.Business.Models.EsporteModel", b =>
                {
                    b.Property<int>("IdEsporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEsporte"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEsporte");

                    b.ToTable("TB_ESPORTE", (string)null);
                });

            modelBuilder.Entity("HubArena.Business.Models.FuncionarioModel", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFuncionario"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("varchar(90)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Sexo")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("StatusPessoa")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdFuncionario");

                    b.ToTable("TB_FUNCIONARIO", (string)null);
                });

            modelBuilder.Entity("HubArena.Business.Models.QuadraModel", b =>
                {
                    b.Property<int>("IdQuadra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdQuadra"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("int");

                    b.Property<int>("IdEsporte")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("StatusQuadra")
                        .HasColumnType("int");

                    b.Property<int>("TipoQuadra")
                        .HasColumnType("int");

                    b.HasKey("IdQuadra");

                    b.HasIndex("IdEsporte");

                    b.ToTable("TB_QUADRA", (string)null);
                });

            modelBuilder.Entity("HubArena.Business.Models.ReservaEquipamentoModel", b =>
                {
                    b.Property<int>("IdReservaEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReservaEquipamento"));

                    b.Property<int>("IdEquipamento")
                        .HasColumnType("int");

                    b.Property<int>("IdReserva")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("IdReservaEquipamento");

                    b.HasIndex("IdEquipamento");

                    b.HasIndex("IdReserva");

                    b.ToTable("TB_RESERVA_EQUIPAMENTO", (string)null);
                });

            modelBuilder.Entity("HubArena.Business.Models.ReservaModel", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int");

                    b.Property<int>("IdQuadra")
                        .HasColumnType("int");

                    b.Property<int>("StatusReserva")
                        .HasColumnType("int");

                    b.HasKey("IdReserva");

                    b.HasIndex("IdFuncionario");

                    b.HasIndex("IdQuadra");

                    b.ToTable("TB_RESERVA", (string)null);
                });

            modelBuilder.Entity("HubArena.Business.Models.ContatoModel", b =>
                {
                    b.HasOne("HubArena.Business.Models.FuncionarioModel", "Funcionario")
                        .WithMany("Contatos")
                        .HasForeignKey("IdFuncionario")
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("HubArena.Business.Models.EnderecoFuncionarioModel", b =>
                {
                    b.HasOne("HubArena.Business.Models.FuncionarioModel", "Funcionario")
                        .WithOne("EnderecoFuncionario")
                        .HasForeignKey("HubArena.Business.Models.EnderecoFuncionarioModel", "IdFuncionario")
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("HubArena.Business.Models.EnderecoQuadraModel", b =>
                {
                    b.HasOne("HubArena.Business.Models.QuadraModel", "Quadra")
                        .WithOne("EnderecoQuadra")
                        .HasForeignKey("HubArena.Business.Models.EnderecoQuadraModel", "IdQuadra")
                        .IsRequired();

                    b.Navigation("Quadra");
                });

            modelBuilder.Entity("HubArena.Business.Models.EquipamentoModel", b =>
                {
                    b.HasOne("HubArena.Business.Models.EsporteModel", "Esporte")
                        .WithMany("Equipamentos")
                        .HasForeignKey("IdEsporte")
                        .IsRequired();

                    b.Navigation("Esporte");
                });

            modelBuilder.Entity("HubArena.Business.Models.QuadraModel", b =>
                {
                    b.HasOne("HubArena.Business.Models.EsporteModel", "Esporte")
                        .WithMany("Quadras")
                        .HasForeignKey("IdEsporte")
                        .IsRequired();

                    b.Navigation("Esporte");
                });

            modelBuilder.Entity("HubArena.Business.Models.ReservaEquipamentoModel", b =>
                {
                    b.HasOne("HubArena.Business.Models.EquipamentoModel", "Equipamento")
                        .WithMany("ReservaEquipamentos")
                        .HasForeignKey("IdEquipamento")
                        .IsRequired();

                    b.HasOne("HubArena.Business.Models.ReservaModel", "Reserva")
                        .WithMany("ReservaEquipamentos")
                        .HasForeignKey("IdReserva")
                        .IsRequired();

                    b.Navigation("Equipamento");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("HubArena.Business.Models.ReservaModel", b =>
                {
                    b.HasOne("HubArena.Business.Models.FuncionarioModel", "Funcionario")
                        .WithMany("Reservas")
                        .HasForeignKey("IdFuncionario")
                        .IsRequired();

                    b.HasOne("HubArena.Business.Models.QuadraModel", "Quadra")
                        .WithMany("Reservas")
                        .HasForeignKey("IdQuadra")
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Quadra");
                });

            modelBuilder.Entity("HubArena.Business.Models.EquipamentoModel", b =>
                {
                    b.Navigation("ReservaEquipamentos");
                });

            modelBuilder.Entity("HubArena.Business.Models.EsporteModel", b =>
                {
                    b.Navigation("Equipamentos");

                    b.Navigation("Quadras");
                });

            modelBuilder.Entity("HubArena.Business.Models.FuncionarioModel", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("EnderecoFuncionario");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("HubArena.Business.Models.QuadraModel", b =>
                {
                    b.Navigation("EnderecoQuadra");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("HubArena.Business.Models.ReservaModel", b =>
                {
                    b.Navigation("ReservaEquipamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
